<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls">

    <!-- ********************************** CheckBoxStyle **********************************-->
    <!-- adapted from http://brianlagunas.com/free-metro-light-and-dark-themes-for-wpf-and-silverlight-microsoft-controls/ -->
    <Style x:Key="MetroCheckBox"
           TargetType="CheckBox">
        <Setter Property="Foreground"
                Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="FontSize"
                Value="{DynamicResource ContentFontSize}" />
        <Setter Property="FontFamily"
                Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="6,0,0,0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush"
                Value="{DynamicResource HighlightBrush}" />
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush"
                Value="{DynamicResource CheckBoxMouseOverBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="contentPresenter" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="checkBox" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="IndeterminateCheck" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"
                                              x:Name="LeftCol" />
                            <ColumnDefinition Width="*"
                                              x:Name="RightCol" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="PART_CHECKBOX">
                            <Rectangle Fill="{DynamicResource TransparentWhiteBrush}"
                                       Margin="-6, 0" />
                            <Border x:Name="normal"
                                    BorderBrush="{DynamicResource CheckBoxBrush}"
                                    BorderThickness="1"
                                    Background="{DynamicResource WhiteBrush}"
                                    Width="18"
                                    Height="18" />
                            <Path x:Name="checkBox"
                                  Height="10"
                                  Width="12"
                                  Stretch="Fill"
                                  Opacity="0"
                                  Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                                  Fill="{DynamicResource HighlightBrush}"
                                  UseLayoutRounding="False" />
                            <Rectangle x:Name="IndeterminateCheck"
                                       Fill="{DynamicResource GrayBrush3}"
                                       Height="3"
                                       Width="8"
                                       Opacity="0" />
                            <Border x:Name="disabled"
                                    Opacity="0"
                                    BorderThickness="1"
                                    Background="{DynamicResource SemiTransparentWhiteBrush}"
                                    Width="18"
                                    Height="18" />
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="normal"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="normal"
                                    Property="BorderBrush"
                                    Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="normal"
                                    Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="FlowDirection"
                                 Value="RightToLeft">
                            <Setter TargetName="checkBox"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Controls:ToggleButtonHelper.ContentDirection"
                                 Value="RightToLeft">
                            <Setter Property="Padding"
                                    Value="0,0,6,0" />
                            <Setter TargetName="LeftCol"
                                    Property="Width"
                                    Value="*" />
                            <Setter TargetName="RightCol"
                                    Property="Width"
                                    Value="18" />
                            <Setter TargetName="PART_CHECKBOX"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="contentPresenter"
                                    Property="Grid.Column"
                                    Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
