<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="RibbonRadioButtonStyleKey"
           TargetType="{x:Type RibbonRadioButton}">
        <Setter Property="CheckedBackground"
                Value="{DynamicResource AccentColorBrush3}" />
        <Setter Property="PressedBackground"
                Value="{DynamicResource AccentColorBrush2}" />
        <Setter Property="FocusedBackground"
                Value="{DynamicResource AccentColorBrush4}" />
        <Setter Property="MouseOverBackground"
                Value="{DynamicResource AccentColorBrush4}" />
        <Setter Property="CheckedBorderBrush"
                Value="{DynamicResource AccentColorBrush2}" />
        <Setter Property="RibbonControlService.CornerRadius"
                Value="0"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RibbonRadioButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Border Name="OuterBorder"
                                Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                                BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                                CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" />
                        <Border Name="MiddleBorder"
                                Background="#00FFFFFF"
                                BorderBrush="#00FFFFFF"
                                BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                                CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}">
                            <Border Name="InnerBorder"
                                    Background="#00FFFFFF"
                                    BorderBrush="#00FFFFFF"
                                    BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                                    CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}"
                                    Padding="{TemplateBinding Control.Padding}">
                                <StackPanel Name="StackPanel"
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}">
                                    <Image Name="PART_Image"
                                           Width="32"
                                           Height="32"
                                           Margin="1,1,1,2"
                                           HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                           VerticalAlignment="Center"
                                           RenderOptions.BitmapScalingMode="NearestNeighbor"
                                           Source="{TemplateBinding RibbonControlService.LargeImageSource}" />
                                    <Grid Name="Grid"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                                        <RibbonTwoLineText Name="TwoLineText"
                                                           Margin="1,1,1,0"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Top"
                                                           LineHeight="13"
                                                           LineStackingStrategy="BlockLineHeight"
                                                           Text="{TemplateBinding RibbonControlService.Label}"
                                                           TextAlignment="Center" />
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="Large">
                            <Setter Property="FrameworkElement.MinWidth">
                                <Setter.Value>
                                    <s:Double>44</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>66</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Grid"
                                    Property="FrameworkElement.MinHeight">
                                <Setter.Value>
                                    <s:Double>26</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TwoLineText"
                                    Property="RibbonTwoLineText.HasTwoLines">
                                <Setter.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="Small">
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>22</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Image"
                                    Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>1,0,1,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Image"
                                    Property="Image.Source">
                                <Setter.Value>
                                    <Binding Path="SmallImageSource"
                                             RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Image"
                                    Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>16</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Image"
                                    Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>16</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TwoLineText"
                                    Property="FrameworkElement.HorizontalAlignment">
                                <Setter.Value>
                                    <x:Static Member="HorizontalAlignment.Left" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TwoLineText"
                                    Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>1,1,1,1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="StackPanel"
                                    Property="StackPanel.Orientation">
                                <Setter.Value>
                                    <x:Static Member="Orientation.Horizontal" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="Small" />
                                <Condition Binding="{Binding Path=IsInQuickAccessToolBar, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>NaN</s:Double>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="False">
                            <Setter TargetName="TwoLineText"
                                    Property="TextBlock.Text">
                                <Setter.Value>
                                    <x:Null />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}"
                                     Value="Collapsed">
                            <Setter TargetName="PART_Image"
                                    Property="UIElement.Visibility">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Collapsed" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                                 Value="True">
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=FocusedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter TargetName="PART_Image"
                                    Property="UIElement.Opacity">
                                <Setter.Value>
                                    <s:Double>0.5</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=CheckedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=PressedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked"
                                           Value="True" />
                                <Condition Property="UIElement.IsMouseOver"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="OuterBorder"
                                    Property="BorderBrush"
                                    Value="{Binding Path=CheckedBorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked"
                                           Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonBase.IsPressed"
                                           Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background"
                                    Value="{Binding Path=PressedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="RibbonControlService.IsInControlGroup">
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <Binding Path="Ribbon.BorderBrush"
                                             RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderThickness">
                                <Setter.Value>
                                    <Thickness>0,0,1,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="True">
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MiddleBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MiddleBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Panel.Background">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder"
                                    Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>