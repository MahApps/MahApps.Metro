<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">

    <Style TargetType="RibbonTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RibbonTextBox}">
                    <Border Name="MainBorder" Margin="1,1,1,1">
                        <Grid Margin="1,0,1,0" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Name="OuterTextColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Name="Image"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Width="32"
                                   Height="32"
                                   Margin="1,1,1,1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   Source="{TemplateBinding RibbonControlService.LargeImageSource}" />
                            <Grid Name="Grid"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center">
                                <Grid Name="InnerGrid"
                                      Margin="1,1,1,1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Name="TextColumn" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Name="TwoLineTextPanel"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                                        <RibbonTwoLineText Name="TwoLineText"
                                                           Margin="2,0,2,0"
                                                           LineHeight="13"
                                                           LineStackingStrategy="BlockLineHeight"
                                                           Text="{TemplateBinding RibbonControlService.Label}"
                                                           TextAlignment="Center" />
                                        <Rectangle Name="FocusVisual"
                                                   Margin="1,1,1,1"
                                                   Stroke="#FF000000"
                                                   StrokeDashArray="1 2"
                                                   StrokeThickness="1"
                                                   Visibility="Collapsed" />
                                    </Grid>
                                    <Border Name="Border"
                                            Grid.Column="1"
                                            Height="20"
                                            Margin="2,0,2,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="{TemplateBinding Panel.Background}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            BorderThickness="{TemplateBinding Border.BorderThickness}">
                                        <ScrollViewer Name="PART_ContentHost"
                                                      Width="{TemplateBinding RibbonTextBox.TextBoxWidth}"
                                                      Margin="0,1,0,1"
                                                      VerticalAlignment="Center" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.Width.IsStar, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="TextColumn" Property="ColumnDefinition.Width">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_ContentHost" Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>NaN</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="FrameworkElement.HorizontalAlignment">
                                <Setter.Value>
                                    <x:Static Member="HorizontalAlignment.Stretch" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Grid" Property="FrameworkElement.HorizontalAlignment">
                                <Setter.Value>
                                    <x:Static Member="HorizontalAlignment.Stretch" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerGrid" Property="FrameworkElement.HorizontalAlignment">
                                <Setter.Value>
                                    <x:Static Member="HorizontalAlignment.Stretch" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Large">
                            <Setter Property="FrameworkElement.MinWidth">
                                <Setter.Value>
                                    <s:Double>44</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>66</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>32</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>32</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Grid" Property="FrameworkElement.MinHeight">
                                <Setter.Value>
                                    <s:Double>26</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TwoLineText" Property="RibbonTwoLineText.HasTwoLines">
                                <Setter.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small">
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>22</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="Image.Source">
                                <Setter.Value>
                                    <Binding Path="SmallImageSource" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>16</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>16</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="FrameworkElement.HorizontalAlignment">
                                <Setter.Value>
                                    <x:Static Member="HorizontalAlignment.Left" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>2,0,1,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TwoLineText" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>2,0,1,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="TwoLineText" Property="RibbonTwoLineText.HasTwoLines">
                                <Setter.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="Grid.Column">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Image" Property="Grid.Row">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerGrid" Property="FrameworkElement.Margin">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Collapsed">
                            <Setter TargetName="Image" Property="UIElement.Visibility">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Collapsed" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                            <Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Collapsed" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="Panel.Background">
                                <Setter.Value>
                                    <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Border.BorderBrush">
                                <Setter.Value>
                                    <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="Panel.Background">
                                <Setter.Value>
                                    <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Border.BorderBrush">
                                <Setter.Value>
                                    <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <Trigger Property="RibbonControlService.ShowKeyboardCues">
                            <Setter TargetName="FocusVisual" Property="UIElement.Visibility">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Visible" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter TargetName="Image" Property="UIElement.Opacity">
                                <Setter.Value>
                                    <s:Double>0.5</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Panel.Background">
                                <Setter.Value>
                                    <SolidColorBrush>#90DEDEDE</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Border.BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush>#90B1BBC6</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="RibbonControlService.IsInControlGroup">
                            <Setter TargetName="MainBorder" Property="Border.BorderBrush">
                                <Setter.Value>
                                    <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="Border.BorderThickness">
                                <Setter.Value>
                                    <Thickness>0,0,1,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                            <Setter Property="Panel.Background">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.WindowBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Panel.Background">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="FocusVisual" Property="Shape.Stroke">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.WindowFrameBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MainBorder" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="Border.BorderBrush">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainBorder" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>