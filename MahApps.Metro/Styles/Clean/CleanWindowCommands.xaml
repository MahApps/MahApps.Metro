<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls"
                    xmlns:Converters="clr-namespace:MahApps.Metro.Converters">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Converters:ToUpperConverter x:Key="ToUpperConverter" />

    <ControlTemplate x:Key="CleanWindowCommandsButtonTemplate"
                     TargetType="{x:Type Button}">
					 
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              RecognizesAccessKey="True"
                              Opacity="0.5"
                              Margin="9,1,9,1" />
            <Rectangle x:Name="separator"
                       Opacity="0.25"
                       Width="1"
                       Height="{Binding SeparatorHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"
                       Margin="8,0,0,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       SnapsToDevicePixels="True"
                       Fill="{DynamicResource BlackBrush}"
                       Visibility="{Binding ShowSeparators, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"/>
        </Grid>
		
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding PreserveTextCase, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"
                         Value="False">
                <Setter TargetName="contentPresenter"
                        Property="Content"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={StaticResource ToUpperConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding PreserveTextCase, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"
                         Value="True">
                <Setter TargetName="contentPresenter"
                        Property="Content"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" />
            </DataTrigger>
            <Trigger Property="Controls:ButtonHelper.ShowSeparator"
                     Value="False">
                <Setter TargetName="separator"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
		
    </ControlTemplate>

    <ControlTemplate x:Key="CleanWindowCommandsToggleButtonTemplate"
                     TargetType="{x:Type ToggleButton}">
					 
        <Grid Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              RecognizesAccessKey="True"
                              Opacity="0.5"
                              Margin="9,1,9,1" />
            <Rectangle x:Name="separator"
                       Opacity="0.25"
                       Width="1"
                       Height="{Binding SeparatorHeight, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"
                       Margin="8,0,0,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       SnapsToDevicePixels="True"
                       Fill="{DynamicResource BlackBrush}"
                       Visibility="{Binding ShowSeparators, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"/>
        </Grid>
		
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding PreserveTextCase, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"
                         Value="False">
                <Setter TargetName="contentPresenter"
                        Property="Content"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Converter={StaticResource ToUpperConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding PreserveTextCase, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:WindowCommands}}}"
                         Value="True">
                <Setter TargetName="contentPresenter"
                        Property="Content"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" />
            </DataTrigger>
            <Trigger Property="Controls:ButtonHelper.ShowSeparator"
                     Value="False">
                <Setter TargetName="separator"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="contentPresenter"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
		
    </ControlTemplate>
    
    <ControlTemplate x:Key="CleanWindowCommandsTemplate"
                     TargetType="Controls:WindowCommands">
					 
        <ItemsPresenter />
		
        <ControlTemplate.Resources>
            <ResourceDictionary>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground"
                            Value="{DynamicResource BlackBrush}" />
                    <Setter Property="Background"
                            Value="{DynamicResource TransparentWhiteBrush}" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="Padding"
                            Value="1" />
                    <Setter Property="Focusable"
                            Value="False" />
                    <Setter Property="FocusVisualStyle"
                            Value="{x:Null}" />
                    <Setter Property="Template"
                            Value="{StaticResource CleanWindowCommandsButtonTemplate}" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush4}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Foreground"
                            Value="{DynamicResource BlackBrush}" />
                    <Setter Property="Background"
                            Value="{DynamicResource TransparentWhiteBrush}" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="Padding"
                            Value="1" />
                    <Setter Property="Focusable"
                            Value="False" />
                    <Setter Property="FocusVisualStyle"
                            Value="{x:Null}" />
                    <Setter Property="Template"
                            Value="{StaticResource CleanWindowCommandsToggleButtonTemplate}"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush4}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ResourceDictionary>
        </ControlTemplate.Resources>
				
    </ControlTemplate>

    <Style TargetType="{x:Type Controls:WindowCommands}"
           BasedOn="{StaticResource {x:Type Controls:WindowCommands}}">
		   
        <Setter Property="Template"
                Value="{StaticResource CleanWindowCommandsTemplate}" />
				
    </Style>

</ResourceDictionary>