<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
    <Style TargetType="{x:Type Controls:MetroWindow}"
           x:Key="CleanWindowStyleKey">
        <Setter Property="ShowTitleBar"
                Value="False" />
        <Setter Property="MinWidth"
                Value="400" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:MetroWindow}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

                        <Storyboard x:Key="OverlayFastSemiFadeIn" 
                                    BeginTime="0:0:0"
                                    AccelerationRatio=".97" 
                                    Storyboard.TargetProperty="Opacity"
                                    SpeedRatio="2.7">
                            <DoubleAnimation To=".7" />
                        </Storyboard>
                        <Storyboard x:Key="OverlayFastSemiFadeOut" 
                                    BeginTime="0:0:0"
                                    AccelerationRatio=".97" 
                                    Storyboard.TargetProperty="Opacity"
                                    SpeedRatio="2.7">
                            <DoubleAnimation To="0." />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <AdornerDecorator>
                            <Controls:MetroContentControl IsTabStop="False"
                                                          FocusVisualStyle="{x:Null}"
                                                          OnlyLoadTransition="True"
                                                          TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}">
                                <Grid Background="{DynamicResource WhiteBrush}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="PART_TitleBar"
                                          Panel.ZIndex="100"
                                          HorizontalAlignment="Stretch"
                                          Width="{TemplateBinding ActualWidth}"
                                          Height="{Binding TitlebarHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}">

                                        <Image Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               Source="{TemplateBinding Icon}"
                                               RenderOptions.EdgeMode="Aliased"
                                               RenderOptions.BitmapScalingMode="HighQuality"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Top" />

                                        <Label HorizontalAlignment="Stretch"
                                               HorizontalContentAlignment="Center"
                                               VerticalAlignment="Top"
                                               Content="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}"
                                               FontSize="{DynamicResource WindowTitleFontSize}" />

                                        <Grid VerticalAlignment="Top"
                                              HorizontalAlignment="Right">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <!-- the window commands -->
                                            <ContentPresenter Content="{Binding WindowCommands, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}"
                                                        x:Name="PART_WindowCommands"
                                                        Panel.ZIndex="1"
                                                        Grid.Column="0" />
                                            <!-- the window button commands -->
                                            <Controls:WindowButtonCommands x:Name="PART_WindowButtonCommands"
                                                        Panel.ZIndex="1"
                                                        Grid.Column="1">
                                                <Controls:WindowButtonCommands.Resources>
                                                    <Style x:Key="IronicallyNamedChromelessButtonStyle"
                                                            TargetType="{x:Type Button}">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource TransparentWhiteBrush}" />
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                        <Setter Property="HorizontalContentAlignment"
                                                                Value="Center" />
                                                        <Setter Property="VerticalContentAlignment"
                                                                Value="Center" />
                                                        <Setter Property="Padding"
                                                                Value="1" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid x:Name="grid"
                                                                            Background="{TemplateBinding Background}">
                                                                        <ContentPresenter x:Name="contentPresenter"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            Margin="{TemplateBinding Padding}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                            RecognizesAccessKey="True"
                                                                            Opacity="0.75" />
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver"
                                                                                    Value="True">
                                                                            <Setter TargetName="contentPresenter"
                                                                                    Property="Opacity"
                                                                                    Value="1" />
                                                                            <Setter TargetName="grid"
                                                                                    Property="Background"
                                                                                    Value="{DynamicResource SemiTransparentWhiteBrush}" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver"
                                                                                Value="False">
                                                                            <Setter TargetName="contentPresenter"
                                                                                Property="Opacity"
                                                                                Value=".5" />
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsPressed"
                                                                                           Value="True" />
                                                                                <Condition Property="Name"
                                                                                           Value="PART_Min" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter TargetName="grid"
                                                                                Property="Background"
                                                                                Value="{DynamicResource HighlightBrush}" />
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsPressed"
                                                                                           Value="True" />
                                                                                <Condition Property="Name"
                                                                                           Value="PART_Max" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter TargetName="grid"
                                                                                Property="Background"
                                                                                Value="{DynamicResource HighlightBrush}" />
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsPressed"
                                                                                           Value="True" />
                                                                                <Condition Property="Name"
                                                                                           Value="PART_Close" />
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter TargetName="grid"
                                                                                Property="Background"
                                                                                Value="#CD2626" />
                                                                        </MultiTrigger>
                                                                        <Trigger Property="IsEnabled"
                                                                                    Value="false">
                                                                            <Setter Property="Foreground"
                                                                                Value="#ADADAD" />
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Controls:WindowButtonCommands.Resources>
                                            </Controls:WindowButtonCommands>
                                        </Grid>

                                    </Grid>

                                    <ContentPresenter Grid.Row="1" />

                                    <!-- disables the main content when a modal flyout is shown -->
                                    <Rectangle Grid.RowSpan="2" 
                                               Grid.ColumnSpan="3" 
                                               Name="PART_FlyoutModal" 
                                               Fill="{DynamicResource BlackColorBrush}"
                                               Opacity="0.5"
                                               Visibility="Hidden"/>

                                    <ContentControl Grid.Row="0"
                                                  Grid.RowSpan="2"
                                                  Panel.ZIndex="2"
                                                  KeyboardNavigation.TabNavigation="None"
                                                  Content="{Binding Flyouts, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}"
                                                  VerticalAlignment="Stretch">
                                    </ContentControl>

                                    <!--Used to create that overlay effect. Can be used for anything.-->
                                    <Grid Grid.Row="0"
                                          Grid.RowSpan="2"
                                          Panel.ZIndex="3"
                                          x:Name="PART_OverlayBox"
                                          Background="{DynamicResource BlackColorBrush}"
                                          Opacity=".7"
                                          Visibility="Hidden">
                                    </Grid>

                                    <Grid Grid.Row="0"
                                          Grid.RowSpan="2"
                                          Panel.ZIndex="4"
                                          x:Name="PART_MessageDialogContainer">

                                    </Grid>
                                </Grid>
                            </Controls:MetroContentControl>
                        </AdornerDecorator>
                        <Border x:Name="PART_Border"
                                Opacity="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" />
                        <ResizeGrip x:Name="WindowResizeGrip"
                                    HorizontalAlignment="Right"
                                    IsTabStop="false"
                                    Visibility="Collapsed"
                                    VerticalAlignment="Bottom" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode"
                                           Value="CanResizeWithGrip" />
                                <Condition Property="WindowState"
                                           Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    TargetName="WindowResizeGrip"
                                    Value="Visible" />
                        </MultiTrigger>
                        <!--<Trigger Property="TitleCaps" Value="True">
<Setter TargetName="WindowTitleTextBlock" Property="Text" Value="{Binding Path=Title, Converter={StaticResource ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
</Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>