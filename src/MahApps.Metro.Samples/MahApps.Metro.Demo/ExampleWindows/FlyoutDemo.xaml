<mah:MetroWindow x:Class="MetroDemo.ExampleWindows.FlyoutDemo"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:exampleWindows="clr-namespace:MetroDemo.ExampleWindows"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 xmlns:local="clr-namespace:MetroDemo"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 x:Name="ThisView"
                 Title="Flyouts Demo"
                 Width="700"
                 Height="500"
                 MinWidth="700"
                 MinHeight="500"
                 d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
                 IconOverlayBehavior="Never"
                 ResizeMode="CanResizeWithGrip"
                 SaveWindowPosition="True"
                 TitleCharacterCasing="Normal"
                 WindowStartupLocation="CenterScreen"
                 mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>

            <ObjectDataProvider x:Key="WindowCommandsOverlayBehaviorValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type mah:WindowCommandsOverlayBehavior}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="mah:WindowCommandsOverlayBehavior" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="OverlayBehaviorValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type mah:OverlayBehavior}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="mah:OverlayBehavior" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

        </ResourceDictionary>
    </Window.Resources>

    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <iconPacks:PackIconModern Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Margin="4"
                                      Foreground="{DynamicResource MahApps.Brushes.IdealForeground}"
                                      Kind="Box" />
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>

    <mah:MetroWindow.TitleTemplate>
        <DataTemplate>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <TextBlock Margin="0 -1 8 0"
                           VerticalAlignment="Center"
                           FontFamily="{DynamicResource MahApps.Fonts.Family.Window.Title}"
                           FontSize="{DynamicResource MahApps.Font.Size.Window.Title}"
                           Text="{TemplateBinding Content}"
                           TextTrimming="CharacterEllipsis" />
                <Button Margin="1 0 1 1"
                        Click="ClickMeOnClick"
                        Content="Click Me..."
                        Style="{StaticResource MahApps.Styles.Button.Flat}" />
            </StackPanel>
        </DataTemplate>
    </mah:MetroWindow.TitleTemplate>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button Content="A"
                    FontFamily="Wingdings"
                    FontSize="20" />
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Content="B"
                    FontFamily="Wingdings"
                    FontSize="20" />
            <Button Content="C"
                    FontFamily="Wingdings"
                    FontSize="20" />
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl x:Name="flyoutsControl">
            <mah:Flyout x:Name="FirstFlyout"
                        Margin="200 30 0 0"
                        mah:ControlsHelper.ContentCharacterCasing="Upper"
                        mah:HeaderedControlHelper.HeaderBackground="#FFEB3B"
                        mah:HeaderedControlHelper.HeaderFontFamily="Segoe Script"
                        mah:HeaderedControlHelper.HeaderForeground="Black"
                        mah:HeaderedControlHelper.HeaderHorizontalContentAlignment="Stretch"
                        AreAnimationsEnabled="True"
                        FocusedElement="{Binding ElementName=firstTB}"
                        Header="Settings"
                        Position="Right">
                <mah:Flyout.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Right" Text="{Binding}" />
                    </DataTemplate>
                </mah:Flyout.HeaderTemplate>
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock Text="Something above the ScrollPanel" />
                        <TextBlock Text="This Flyout animates its opacity when opening and closing." />
                    </StackPanel>
                    <TabControl Grid.Row="1" mah:TabControlHelper.Underlined="TabPanel">
                        <TabItem Header="Settings">
                            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Vertical">
                                    <TextBox x:Name="firstTB" mah:TextBoxHelper.Watermark="TextBox 01" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 02" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 03" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 04" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 05" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 06" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 07" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 08" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 09" />
                                    <TextBox Margin="0 5 0 0" mah:TextBoxHelper.Watermark="TextBox 10" />
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="Empty" />
                    </TabControl>
                    <UniformGrid Grid.Row="2"
                                 Margin="10"
                                 Columns="2">
                        <Button Margin="10"
                                Content="Create"
                                Style="{DynamicResource MahApps.Styles.Button.Square}" />
                        <Button Margin="10"
                                Content="Cancel"
                                Style="{DynamicResource MahApps.Styles.Button.Square}" />
                    </UniformGrid>
                </Grid>
            </mah:Flyout>

            <mah:Flyout x:Name="SecondFlyout"
                        HorizontalContentAlignment="Stretch"
                        AnimateOpacity="True"
                        CloseButtonIsCancel="True"
                        Header="New Goodness"
                        Position="Right">
                <StackPanel Margin="10" Orientation="Vertical">
                    <Button Margin="2"
                            Content="create"
                            Style="{StaticResource MahApps.Styles.Button.Flat}" />
                    <Button Margin="2"
                            Content="cancel"
                            Style="{StaticResource MahApps.Styles.Button.Flat}" />
                </StackPanel>
            </mah:Flyout>

            <exampleWindows:ShowcaseFlyout x:Name="ShowcaseFlyout" DataContext="{Binding}" />

            <mah:Flyout x:Name="InverseFlyout"
                        Header="Inverse"
                        Position="Right"
                        Theme="Inverse">
                <Grid Width="400" Margin="10">
                    <TextBlock Text="This flyout has the inverse theme of the current window theme" />
                </Grid>
            </mah:Flyout>

            <mah:Flyout x:Name="AdaptFlyout"
                        Header="Adapt"
                        Position="Right"
                        Theme="Adapt">
                <Grid Width="400" Margin="10">
                    <TextBlock Text="This flyout adapts the theme of the current window" />
                </Grid>
            </mah:Flyout>

            <mah:Flyout x:Name="SettingsFlyout"
                        AnimateOnPositionChange="{Binding AnimateOnPositionChange}"
                        Header="Cool"
                        Position="Right">
                <Grid Width="270" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0"
                           Grid.Column="0"
                           Margin="5"
                           VerticalAlignment="Center"
                           Content="Download language:" />
                    <ComboBox x:Name="flyoutSettingsComboboxDownloadlanguage"
                              Grid.Row="0"
                              Grid.Column="1"
                              Margin="0 5 5 5"
                              VerticalAlignment="Center" />
                    <UniformGrid Grid.Row="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="2"
                                 Margin="10"
                                 Columns="3">
                        <CheckBox IsChecked="{Binding AnimateOnPositionChange}">Animate</CheckBox>
                        <Button Margin="10"
                                Command="{Binding MoveLeftFlyoutCommand}"
                                CommandParameter="{x:Reference SettingsFlyout}"
                                Content="Left"
                                Style="{DynamicResource MahApps.Styles.Button.Accent.Win10}" />
                        <Button Margin="10"
                                Command="{Binding MoveRightFlyoutCommand}"
                                CommandParameter="{x:Reference SettingsFlyout}"
                                Content="Right"
                                Style="{DynamicResource MahApps.Styles.Button.Accent.Win10}" />
                    </UniformGrid>
                </Grid>
            </mah:Flyout>

            <mah:Flyout x:Name="LeftFlyout"
                        Header="Left"
                        Position="Left">
                <StackPanel Width="150" Margin="5 5 5 5">
                    <TextBlock Text="a test for left" />
                    <CheckBox Content="a simple checkbox" />
                    <RadioButton Content="a simple RadioButton" />
                    <ComboBox>
                        <ComboBoxItem>Item 1</ComboBoxItem>
                        <ComboBoxItem>Item 2</ComboBoxItem>
                        <ComboBoxItem>Item 3</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
            </mah:Flyout>

            <mah:Flyout x:Name="CustomTopFlyout"
                        Margin="50 0 50 0"
                        CloseButtonVisibility="Collapsed"
                        Header="Top"
                        IsModal="True"
                        Position="Top"
                        Theme="Light"
                        TitleVisibility="Collapsed">
                <Grid Height="150">
                    <TextBlock Margin="10"
                               FontSize="22"
                               Text="Flyout on the top..." />
                    <Grid VerticalAlignment="Bottom" Background="{DynamicResource MahApps.Brushes.Accent2}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1"
                                Margin="5"
                                Content="_Save"
                                IsEnabled="False"
                                Style="{DynamicResource MahApps.Styles.Button.Flat}" />
                        <Button Grid.Column="2"
                                Margin="5"
                                Command="{Binding CloseFlyoutCommand}"
                                CommandParameter="{x:Reference CustomTopFlyout}"
                                Content="_Close"
                                IsCancel="True"
                                Style="{DynamicResource MahApps.Styles.Button.Flat}" />
                    </Grid>
                </Grid>
            </mah:Flyout>

            <mah:Flyout x:Name="TopFlyout"
                        Height="150"
                        Header="Top"
                        Position="Top">
                <StackPanel Height="80"
                            Margin="5"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                    <Button Width="36"
                            Height="36"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}">
                        <iconPacks:PackIconModern Kind="Alert" />
                    </Button>
                </StackPanel>
            </mah:Flyout>

            <mah:Flyout x:Name="BottomFlyout"
                        Header="Bottom"
                        Position="Bottom">
                <StackPanel Height="80"
                            Margin="5 5 5 5"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <Button Width="36"
                            Height="36"
                            FontFamily="Segoe UI Symbol"
                            FontSize="16"
                            Style="{DynamicResource MahApps.Styles.Button.Circle}">
                        <iconPacks:PackIconModern Kind="Add" />
                    </Button>
                </StackPanel>
            </mah:Flyout>

            <mah:Flyout x:Name="ModalFlyout"
                        Header="Modal"
                        IsModal="True"
                        Position="Right">
                <StackPanel Height="80"
                            Margin="5 5 5 5"
                            Orientation="Horizontal">
                    <TextBlock>Modal Flyout</TextBlock>
                </StackPanel>
            </mah:Flyout>

            <mah:Flyout x:Name="AppBarFlyout"
                        Height="75"
                        CloseButtonVisibility="Collapsed"
                        IsPinned="False"
                        Position="Bottom"
                        TitleVisibility="Collapsed">
                <TextBlock VerticalAlignment="Center" Text="This is an AppBar" />
            </mah:Flyout>

            <mah:Flyout x:Name="AutoCloseFlyout"
                        AutoCloseInterval="6000"
                        CloseButtonVisibility="Collapsed"
                        Header="AutoClose"
                        IsAutoCloseEnabled="True"
                        Position="Right">
                <StackPanel Width="400"
                            Margin="10"
                            SnapsToDevicePixels="True">
                    <CheckBox Margin="4"
                              Content="AutoClose Enabled"
                              IsChecked="{Binding IsAutoCloseEnabled, ElementName=AutoCloseFlyout, Mode=TwoWay}" />
                    <Slider Margin="4"
                            IsSnapToTickEnabled="True"
                            Maximum="12000"
                            Minimum="2000"
                            TickFrequency="2000"
                            Value="{Binding AutoCloseInterval, ElementName=AutoCloseFlyout, Mode=TwoWay}" />
                    <TextBlock Margin="4">
                        <Run Text="This flyout will auto close after " />
                        <Run Text="{Binding AutoCloseInterval, ElementName=AutoCloseFlyout, Mode=OneWay}" />
                        <Run Text=" milliseconds" />
                    </TextBlock>
                </StackPanel>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>

    <Grid>

        <Grid.Resources>
            <Style BasedOn="{StaticResource MahApps.Styles.Button.Flat}" TargetType="{x:Type Button}" />
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   Margin="10"
                   FontSize="30"
                   Text="Flyout Tests..." />

        <StackPanel Grid.Row="1"
                    Grid.Column="0"
                    MinWidth="200"
                    Margin="5"
                    HorizontalAlignment="Center">
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference FirstFlyout}"
                    Content="Show 1" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference SecondFlyout}"
                    Content="Show 2" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference ShowcaseFlyout}"
                    Content="Show 3" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference InverseFlyout}"
                    Content="Inverse" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference AdaptFlyout}"
                    Content="Adapt" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference SettingsFlyout}"
                    Content="Settings" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference ModalFlyout}"
                    Content="Modal" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference AppBarFlyout}"
                    Content="AppBar" />
            <Button Margin="2"
                    Click="ShowDynamicFlyout"
                    Content="Dynamic" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference AutoCloseFlyout}"
                    Content="AutoClose" />
        </StackPanel>

        <AdornerDecorator Grid.Row="1"
                          Grid.Column="1"
                          MinWidth="100"
                          Margin="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Top">
            <TextBox mah:TextBoxHelper.Watermark="Number greater than 10" Text="{Binding IntegerGreater10Property, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />
        </AdornerDecorator>

        <StackPanel Grid.Row="1"
                    Grid.Column="2"
                    MinWidth="120"
                    Margin="5"
                    HorizontalAlignment="Center"
                    Grid.IsSharedSizeScope="True">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="labels" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Margin="2"
                           VerticalAlignment="Center"
                           Text="LeftWindowCommands" />
                <ComboBox Grid.Column="1"
                          Width="100"
                          Margin="2"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding Source={StaticResource WindowCommandsOverlayBehaviorValues}}"
                          SelectedValue="{Binding ElementName=ThisView, Path=LeftWindowCommandsOverlayBehavior, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="labels" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Margin="2"
                           VerticalAlignment="Center"
                           Text="RightWindowCommands" />
                <ComboBox Grid.Column="1"
                          Width="100"
                          Margin="2"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding Source={StaticResource WindowCommandsOverlayBehaviorValues}}"
                          SelectedValue="{Binding ElementName=ThisView, Path=RightWindowCommandsOverlayBehavior, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="labels" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Margin="2"
                           VerticalAlignment="Center"
                           Text="WindowButtonCommands" />
                <ComboBox Grid.Column="1"
                          Width="100"
                          Margin="2"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding Source={StaticResource OverlayBehaviorValues}}"
                          SelectedValue="{Binding ElementName=ThisView, Path=WindowButtonCommandsOverlayBehavior, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="labels" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Margin="2"
                           VerticalAlignment="Center"
                           Text="Icon" />
                <ComboBox Grid.Column="1"
                          Width="100"
                          Margin="2"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding Source={StaticResource OverlayBehaviorValues}}"
                          SelectedValue="{Binding ElementName=ThisView, Path=IconOverlayBehavior, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <CheckBox Content="ShowTitleBar"
                      IsChecked="{Binding ElementName=ThisView, Path=ShowTitleBar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Style="{StaticResource MahApps.Styles.CheckBox.Win10}" />
            <CheckBox Content="IsWindowDraggable"
                      IsChecked="{Binding ElementName=ThisView, Path=IsWindowDraggable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Style="{StaticResource MahApps.Styles.CheckBox.Win10}" />
            <CheckBox Content="ShowFlyoutsOverDialogs"
                      IsChecked="{Binding ElementName=ThisView, Path=ShowFlyoutsOverDialogs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Style="{StaticResource MahApps.Styles.CheckBox.Win10}" />

            <Button Margin="2 10 2 2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference LeftFlyout}"
                    Content="Show Left" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference CustomTopFlyout}"
                    Content="Show Custom Top" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference TopFlyout}"
                    Content="Show Top" />
            <Button Margin="2"
                    Command="{Binding OpenFlyoutCommand}"
                    CommandParameter="{x:Reference BottomFlyout}"
                    Content="Show Bottom" />
            <Button Margin="2 4 2 2"
                    Click="CloseMe"
                    Content="Close" />
        </StackPanel>
    </Grid>

</mah:MetroWindow>