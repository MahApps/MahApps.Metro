<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AliceBlue" xml:space="preserve">
    <value>Alice Blue</value>
  </data>
  <data name="Amber" xml:space="preserve">
    <value>Amber</value>
  </data>
  <data name="AntiqueWhite" xml:space="preserve">
    <value>Antique White</value>
  </data>
  <data name="Aqua" xml:space="preserve">
    <value>Aqua</value>
  </data>
  <data name="Aquamarine" xml:space="preserve">
    <value>Aquamarine</value>
  </data>
  <data name="Azure" xml:space="preserve">
    <value>Azure</value>
  </data>
  <data name="Beige" xml:space="preserve">
    <value>Beige</value>
  </data>
  <data name="Bisque" xml:space="preserve">
    <value>Bisque</value>
  </data>
  <data name="Black" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="BlanchedAlmond" xml:space="preserve">
    <value>Blanched Almond</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="BlueViolet" xml:space="preserve">
    <value>Blue Violet</value>
  </data>
  <data name="Brown" xml:space="preserve">
    <value>Brown</value>
  </data>
  <data name="BurlyWood" xml:space="preserve">
    <value>Burly Wood</value>
  </data>
  <data name="CadetBlue" xml:space="preserve">
    <value>Cadet Blue</value>
  </data>
  <data name="Chartreuse" xml:space="preserve">
    <value>Chartreuse</value>
  </data>
  <data name="Chocolate" xml:space="preserve">
    <value>Chocolate</value>
  </data>
  <data name="Cobalt" xml:space="preserve">
    <value>Cobalt</value>
  </data>
  <data name="Coral" xml:space="preserve">
    <value>Coral</value>
  </data>
  <data name="CornflowerBlue" xml:space="preserve">
    <value>Cornflower Blue</value>
  </data>
  <data name="Cornsilk" xml:space="preserve">
    <value>Cornsilk</value>
  </data>
  <data name="Crimson" xml:space="preserve">
    <value>Crimson</value>
  </data>
  <data name="Cyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="DarkBlue" xml:space="preserve">
    <value>Dark Blue</value>
  </data>
  <data name="DarkCyan" xml:space="preserve">
    <value>Dark Cyan</value>
  </data>
  <data name="DarkGoldenrod" xml:space="preserve">
    <value>Dark Goldenrod</value>
  </data>
  <data name="DarkGray" xml:space="preserve">
    <value>Dark Gray</value>
  </data>
  <data name="DarkGreen" xml:space="preserve">
    <value>Dark Green</value>
  </data>
  <data name="DarkKhaki" xml:space="preserve">
    <value>Dark Khaki</value>
  </data>
  <data name="DarkMagenta" xml:space="preserve">
    <value>Dark Magenta</value>
  </data>
  <data name="DarkOliveGreen" xml:space="preserve">
    <value>Dark Olive Green</value>
  </data>
  <data name="DarkOrange" xml:space="preserve">
    <value>Dark Orange</value>
  </data>
  <data name="DarkOrchid" xml:space="preserve">
    <value>Dark Orchid</value>
  </data>
  <data name="DarkRed" xml:space="preserve">
    <value>Dark Red</value>
  </data>
  <data name="DarkSalmon" xml:space="preserve">
    <value>Dark Salmon</value>
  </data>
  <data name="DarkSeaGreen" xml:space="preserve">
    <value>Dark Sea Green</value>
  </data>
  <data name="DarkSlateBlue" xml:space="preserve">
    <value>Dark Slate Blue</value>
  </data>
  <data name="DarkSlateGray" xml:space="preserve">
    <value>Dark Slate Gray</value>
  </data>
  <data name="DarkTurquoise" xml:space="preserve">
    <value>Dark Turquoise</value>
  </data>
  <data name="DarkViolet" xml:space="preserve">
    <value>Dark Violet</value>
  </data>
  <data name="DeepPink" xml:space="preserve">
    <value>Deep Pink</value>
  </data>
  <data name="DeepSkyBlue" xml:space="preserve">
    <value>Deep Sky Blue</value>
  </data>
  <data name="DimGray" xml:space="preserve">
    <value>Dim Gray</value>
  </data>
  <data name="DodgerBlue" xml:space="preserve">
    <value>Dodger Blue</value>
  </data>
  <data name="Emerald" xml:space="preserve">
    <value>Emerald</value>
  </data>
  <data name="Firebrick" xml:space="preserve">
    <value>Firebrick</value>
  </data>
  <data name="FloralWhite" xml:space="preserve">
    <value>Floral White</value>
  </data>
  <data name="ForestGreen" xml:space="preserve">
    <value>Forest Green</value>
  </data>
  <data name="Fuchsia" xml:space="preserve">
    <value>Fuchsia</value>
  </data>
  <data name="Gainsboro" xml:space="preserve">
    <value>Gainsboro</value>
  </data>
  <data name="GhostWhite" xml:space="preserve">
    <value>Ghost White</value>
  </data>
  <data name="Gold" xml:space="preserve">
    <value>Gold</value>
  </data>
  <data name="Goldenrod" xml:space="preserve">
    <value>Goldenrod</value>
  </data>
  <data name="Gray" xml:space="preserve">
    <value>Gray</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="GreenYellow" xml:space="preserve">
    <value>Green Yellow</value>
  </data>
  <data name="Honeydew" xml:space="preserve">
    <value>Honeydew</value>
  </data>
  <data name="HotPink" xml:space="preserve">
    <value>Hot Pink</value>
  </data>
  <data name="IndianRed" xml:space="preserve">
    <value>Indian Red</value>
  </data>
  <data name="Indigo" xml:space="preserve">
    <value>Indigo</value>
  </data>
  <data name="Ivory" xml:space="preserve">
    <value>Ivory</value>
  </data>
  <data name="Khaki" xml:space="preserve">
    <value>Khaki</value>
  </data>
  <data name="Lavender" xml:space="preserve">
    <value>Lavender</value>
  </data>
  <data name="LavenderBlush" xml:space="preserve">
    <value>Lavender Blush</value>
  </data>
  <data name="LawnGreen" xml:space="preserve">
    <value>Lawn Green</value>
  </data>
  <data name="LemonChiffon" xml:space="preserve">
    <value>Lemon Chiffon</value>
  </data>
  <data name="LightBlue" xml:space="preserve">
    <value>Light Blue</value>
  </data>
  <data name="LightCoral" xml:space="preserve">
    <value>LightCoral</value>
  </data>
  <data name="LightCyan" xml:space="preserve">
    <value>Light Cyan</value>
  </data>
  <data name="LightGoldenrodYellow" xml:space="preserve">
    <value>Light Goldenrod Yellow</value>
  </data>
  <data name="LightGray" xml:space="preserve">
    <value>Light Gray</value>
  </data>
  <data name="LightGreen" xml:space="preserve">
    <value>Light Green</value>
  </data>
  <data name="LightPink" xml:space="preserve">
    <value>Light Pink</value>
  </data>
  <data name="LightSalmon" xml:space="preserve">
    <value>Light Salmon</value>
  </data>
  <data name="LightSeaGreen" xml:space="preserve">
    <value>Light Sea Green</value>
  </data>
  <data name="LightSkyBlue" xml:space="preserve">
    <value>Light Sky Blue</value>
  </data>
  <data name="LightSlateGray" xml:space="preserve">
    <value>Light Slate Gray</value>
  </data>
  <data name="LightSteelBlue" xml:space="preserve">
    <value>Light Steel Blue</value>
  </data>
  <data name="LightYellow" xml:space="preserve">
    <value>Light Yellow</value>
  </data>
  <data name="Lime" xml:space="preserve">
    <value>Lime</value>
  </data>
  <data name="LimeGreen" xml:space="preserve">
    <value>Lime Green</value>
  </data>
  <data name="Linen" xml:space="preserve">
    <value>Linen</value>
  </data>
  <data name="Magenta" xml:space="preserve">
    <value>Magenta</value>
  </data>
  <data name="Maroon" xml:space="preserve">
    <value>Maroon</value>
  </data>
  <data name="Mauve" xml:space="preserve">
    <value>Mauve</value>
  </data>
  <data name="MediumAquamarine" xml:space="preserve">
    <value>Medium Aquamarine</value>
  </data>
  <data name="MediumBlue" xml:space="preserve">
    <value>Medium Blue</value>
  </data>
  <data name="MediumOrchid" xml:space="preserve">
    <value>Medium Orchid</value>
  </data>
  <data name="MediumPurple" xml:space="preserve">
    <value>Medium Purple</value>
  </data>
  <data name="MediumSeaGreen" xml:space="preserve">
    <value>Medium Sea Green</value>
  </data>
  <data name="MediumSlateBlue" xml:space="preserve">
    <value>Medium Slate Blue</value>
  </data>
  <data name="MediumSpringGreen" xml:space="preserve">
    <value>Medium Spring Green</value>
  </data>
  <data name="MediumTurquoise" xml:space="preserve">
    <value>Medium Turquoise</value>
  </data>
  <data name="MediumVioletRed" xml:space="preserve">
    <value>Medium Violet Red</value>
  </data>
  <data name="MidnightBlue" xml:space="preserve">
    <value>Midnight Blue</value>
  </data>
  <data name="MintCream" xml:space="preserve">
    <value>Mint Cream</value>
  </data>
  <data name="MistyRose" xml:space="preserve">
    <value>Misty Rose</value>
  </data>
  <data name="Moccasin" xml:space="preserve">
    <value>Moccasin</value>
  </data>
  <data name="NavajoWhite" xml:space="preserve">
    <value>Navajo White</value>
  </data>
  <data name="Navy" xml:space="preserve">
    <value>Navy</value>
  </data>
  <data name="OldLace" xml:space="preserve">
    <value>Old Lace</value>
  </data>
  <data name="Olive" xml:space="preserve">
    <value>Olive</value>
  </data>
  <data name="OliveDrab" xml:space="preserve">
    <value>Olive Drab</value>
  </data>
  <data name="Orange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="OrangeRed" xml:space="preserve">
    <value>Orange Red</value>
  </data>
  <data name="Orchid" xml:space="preserve">
    <value>Orchid</value>
  </data>
  <data name="PaleGoldenrod" xml:space="preserve">
    <value>Pale Goldenrod</value>
  </data>
  <data name="PaleGreen" xml:space="preserve">
    <value>Pale Green</value>
  </data>
  <data name="PaleTurquoise" xml:space="preserve">
    <value>Pale Turquoise</value>
  </data>
  <data name="PaleVioletRed" xml:space="preserve">
    <value>Pale Violet Red</value>
  </data>
  <data name="PapayaWhip" xml:space="preserve">
    <value>Papaya Whip</value>
  </data>
  <data name="PeachPuff" xml:space="preserve">
    <value>Peach Puff</value>
  </data>
  <data name="Peru" xml:space="preserve">
    <value>Peru</value>
  </data>
  <data name="Pink" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="Plum" xml:space="preserve">
    <value>Plum</value>
  </data>
  <data name="PowderBlue" xml:space="preserve">
    <value>Powder Blue</value>
  </data>
  <data name="Purple" xml:space="preserve">
    <value>Purple</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="RosyBrown" xml:space="preserve">
    <value>Rosy Brown</value>
  </data>
  <data name="RoyalBlue" xml:space="preserve">
    <value>Royal Blue</value>
  </data>
  <data name="SaddleBrown" xml:space="preserve">
    <value>Saddle Brown</value>
  </data>
  <data name="Salmon" xml:space="preserve">
    <value>Salmon</value>
  </data>
  <data name="SandyBrown" xml:space="preserve">
    <value>Sandy Brown</value>
  </data>
  <data name="SeaGreen" xml:space="preserve">
    <value>Sea Green</value>
  </data>
  <data name="SeaShell" xml:space="preserve">
    <value>Sea Shell</value>
  </data>
  <data name="Sienna" xml:space="preserve">
    <value>Sienna</value>
  </data>
  <data name="Silver" xml:space="preserve">
    <value>Silver</value>
  </data>
  <data name="SkyBlue" xml:space="preserve">
    <value>Sky Blue</value>
  </data>
  <data name="SlateBlue" xml:space="preserve">
    <value>Slate Blue</value>
  </data>
  <data name="SlateGray" xml:space="preserve">
    <value>Slate Gray</value>
  </data>
  <data name="Snow" xml:space="preserve">
    <value>Snow</value>
  </data>
  <data name="SpringGreen" xml:space="preserve">
    <value>Spring Green</value>
  </data>
  <data name="Steel" xml:space="preserve">
    <value>Steel</value>
  </data>
  <data name="SteelBlue" xml:space="preserve">
    <value>Steel Blue</value>
  </data>
  <data name="Tan" xml:space="preserve">
    <value>Tan</value>
  </data>
  <data name="Taupe" xml:space="preserve">
    <value>Taupe</value>
  </data>
  <data name="Teal" xml:space="preserve">
    <value>Teal</value>
  </data>
  <data name="Thistle" xml:space="preserve">
    <value>Thistle</value>
  </data>
  <data name="Tomato" xml:space="preserve">
    <value>Tomato</value>
  </data>
  <data name="Transparent" xml:space="preserve">
    <value>Transparent</value>
  </data>
  <data name="Turquoise" xml:space="preserve">
    <value>Turquoise</value>
  </data>
  <data name="Violet" xml:space="preserve">
    <value>Violet</value>
  </data>
  <data name="Wheat" xml:space="preserve">
    <value>Wheat</value>
  </data>
  <data name="White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="WhiteSmoke" xml:space="preserve">
    <value>White Smoke</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
  <data name="YellowGreen" xml:space="preserve">
    <value>Yellow Green</value>
  </data>
</root>