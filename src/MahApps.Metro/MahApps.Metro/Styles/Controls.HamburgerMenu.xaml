<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:pOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="pOptions">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Scrollbars.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CreatorsHamburgerButtonStyle"
           BasedOn="{StaticResource ChromelessButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="Transparent">
                        <Grid x:Name="PART_Background"
                              Background="{TemplateBinding Background}"
                              Opacity="0" />
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Opacity="0.75"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0.3" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_Background" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.75" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CreatorsHamburgerListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Controls:Underline x:Name="SideBar"
                                                Grid.Column="0"
                                                Margin="0 12"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=(Controls:HamburgerMenuHelper.SideBarBrush), Mode=OneWay}"
                                                LineExtent="4"
                                                LineThickness="4"
                                                Placement="Left"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="-4 0 0 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=(Controls:HamburgerMenuHelper.SideBarSelectedBrush), Mode=OneWay}" />
                            <Setter TargetName="SideBar" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=(Controls:HamburgerMenuHelper.SideBarSelectedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                            <Setter TargetName="SideBar" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=(Controls:HamburgerMenuHelper.SideBarMouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=(Controls:HamburgerMenuHelper.SideBarMouseOverSelectedBrush), Mode=OneWay}" />
                            <Setter TargetName="SideBar" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=(Controls:HamburgerMenuHelper.SideBarMouseOverSelectedBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Center, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    </Style>

    <Style x:Key="CreatorsHamburgerListBoxStyle"
           BasedOn="{StaticResource MetroListBox}"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource CreatorsHamburgerListBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <QuinticEase x:Key="ScrollBarEaseInOut"
                 pOptions:Freeze="true"
                 EasingMode="EaseInOut" />

    <Style x:Key="HamburgerScrollViewerStyle"
           BasedOn="{StaticResource MetroScrollViewer}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="leftColumn" Width="*" />
                            <ColumnDefinition x:Name="rightColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   HorizontalAlignment="Right"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Opacity="0"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="0"
                                   Grid.RowSpan="2"
                                   Grid.Column="0"
                                   VerticalAlignment="Bottom"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Opacity="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Controls:ScrollBarHelper.VerticalScrollBarOnLeftSide" Value="True">
                            <Setter TargetName="PART_HorizontalScrollBar" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_VerticalScrollBar" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="leftColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="rightColumn" Property="Width" Value="*" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:2"
                                                         EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                        <DoubleAnimation BeginTime="0:0:2"
                                                         EasingFunction="{StaticResource ScrollBarEaseInOut}"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CreatorsHamburgerMenu" TargetType="{x:Type Controls:HamburgerMenu}">
        <Setter Property="Controls:HamburgerMenuHelper.SideBarBrush" Value="Transparent" />
        <Setter Property="Controls:HamburgerMenuHelper.SideBarMouseOverBrush" Value="Transparent" />
        <Setter Property="Controls:HamburgerMenuHelper.SideBarMouseOverSelectedBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Controls:HamburgerMenuHelper.SideBarSelectedBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HamburgerMenuTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!--  PackIconMaterial - Menu  -->
                    <ContentControl Width="22"
                                    Height="22"
                                    Content="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"
                                    Style="{DynamicResource PathIconContentControlStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="PaneBackground" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="PaneForeground" Value="{DynamicResource TextLabelBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:HamburgerMenu}">
                    <Grid>
                        <Controls:SplitView x:Name="MainSplitView"
                                            CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                            DisplayMode="{TemplateBinding DisplayMode}"
                                            IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsTabStop="False"
                                            OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                            PaneBackground="{TemplateBinding PaneBackground}"
                                            PaneForeground="{TemplateBinding PaneForeground}"
                                            PanePlacement="{TemplateBinding PanePlacement}">
                            <Controls:SplitView.Pane>
                                <Grid x:Name="PaneGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0"
                                          Height="{TemplateBinding HamburgerHeight}"
                                          HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0" Width="{TemplateBinding HamburgerWidth}" />
                                        <ContentControl Grid.Column="1"
                                                        Background="{DynamicResource WindowBackgroundBrush}"
                                                        ContentTemplate="{TemplateBinding HamburgerMenuHeaderTemplate}"
                                                        Foreground="{DynamicResource TextBrush}"
                                                        IsTabStop="False" />
                                    </Grid>
                                    <ScrollViewer x:Name="PaneScrollViewer"
                                                  Grid.Row="1"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  Controls:ScrollBarHelper.VerticalScrollBarOnLeftSide="{TemplateBinding VerticalScrollBarOnLeftSide}"
                                                  HorizontalScrollBarVisibility="Disabled"
                                                  Style="{StaticResource HamburgerScrollViewerStyle}"
                                                  VerticalScrollBarVisibility="Auto">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto " />
                                            </Grid.RowDefinitions>
                                            <ListBox Name="ButtonsListView"
                                                     Grid.Row="0"
                                                     Width="{TemplateBinding OpenPaneLength}"
                                                     AutomationProperties.Name="Menu items"
                                                     Foreground="{TemplateBinding PaneForeground}"
                                                     ItemTemplate="{TemplateBinding ItemTemplate}"
                                                     ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                     ItemsSource="{TemplateBinding ItemsSource}"
                                                     SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex, Mode=TwoWay}"
                                                     SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem, Mode=TwoWay}"
                                                     SelectionMode="Single"
                                                     Style="{StaticResource CreatorsHamburgerListBoxStyle}"
                                                     TabIndex="1" />
                                            <ListBox Name="OptionsListView"
                                                     Grid.Row="2"
                                                     Width="{TemplateBinding OpenPaneLength}"
                                                     VerticalAlignment="Bottom"
                                                     AutomationProperties.Name="Option items"
                                                     Foreground="{TemplateBinding PaneForeground}"
                                                     ItemTemplate="{TemplateBinding OptionsItemTemplate}"
                                                     ItemTemplateSelector="{TemplateBinding OptionsItemTemplateSelector}"
                                                     ItemsSource="{TemplateBinding OptionsItemsSource}"
                                                     SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsIndex, Mode=TwoWay}"
                                                     SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedOptionsItem, Mode=TwoWay}"
                                                     Style="{StaticResource CreatorsHamburgerListBoxStyle}"
                                                     TabIndex="2" />
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Controls:SplitView.Pane>
                            <Controls:TransitioningContentControl Padding="{TemplateBinding Padding}"
                                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  AutomationProperties.Name="Content"
                                                                  Content="{TemplateBinding Content}"
                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                  RestartTransitionOnContentChange="True"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  Transition="{TemplateBinding ContentTransition}" />
                        </Controls:SplitView>
                        <Button x:Name="HamburgerButton"
                                Width="{TemplateBinding HamburgerWidth}"
                                Height="{TemplateBinding HamburgerHeight}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                AutomationProperties.Name="Main button"
                                Foreground="{DynamicResource TextLabelBrush}"
                                Style="{StaticResource CreatorsHamburgerButtonStyle}"
                                TabIndex="0"
                                Visibility="{TemplateBinding HamburgerVisibility}">
                            <ContentControl Margin="{TemplateBinding HamburgerMargin}"
                                            ContentTemplate="{TemplateBinding HamburgerMenuTemplate}"
                                            IsTabStop="False" />
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

</ResourceDictionary>